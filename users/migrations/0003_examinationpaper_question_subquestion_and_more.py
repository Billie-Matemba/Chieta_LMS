# Generated by Django 5.2.1 on 2025-06-14 17:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0002_remove_qualification_qualification_type_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExaminationPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_number', models.CharField(max_length=10)),
                ('total_marks', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'Under Review'), ('approved', 'Approved'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_papers', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_papers', to=settings.AUTH_USER_MODEL)),
                ('qualification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examination_papers', to='users.qualification')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_papers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['qualification', 'paper_number', '-version'],
                'permissions': [('can_review_papers', 'Can review examination papers'), ('can_approve_papers', 'Can approve examination papers'), ('can_publish_papers', 'Can publish examination papers')],
                'unique_together': {('qualification', 'paper_number', 'version')},
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.CharField(help_text='e.g., 1.1.1, 2.1.4', max_length=20)),
                ('question_type', models.CharField(choices=[('case_study', 'Case Study'), ('standard_answer', 'standard answer'), ('true_false', 'True or False'), ('multiple_choice', 'Multiple Choice')], max_length=20)),
                ('total_marks', models.PositiveIntegerField()),
                ('question_text', models.TextField(help_text='Main question text')),
                ('case_study_text', models.TextField(blank=True, help_text='Case study context (if applicable)')),
                ('instructions', models.TextField(blank=True, help_text='Specific instructions for this question')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_questions', to=settings.AUTH_USER_MODEL)),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='users.examinationpaper')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['paper', 'order'],
                'permissions': [('can_review_questions', 'Can review questions'), ('can_approve_questions', 'Can approve questions')],
                'unique_together': {('paper', 'question_number')},
            },
        ),
        migrations.CreateModel(
            name='SubQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_number', models.CharField(help_text='e.g., 1, 2, a, b', max_length=10)),
                ('question_text', models.TextField()),
                ('marks', models.PositiveIntegerField()),
                ('order', models.PositiveIntegerField(default=1)),
                ('is_true_false', models.BooleanField(default=False)),
                ('correct_answer', models.CharField(blank=True, help_text='For T/F or short answer questions', max_length=50)),
                ('explanation', models.TextField(blank=True, help_text='Explanation of correct answer')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('parent_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_questions', to='users.question')),
            ],
            options={
                'ordering': ['parent_question', 'order'],
                'unique_together': {('parent_question', 'sub_number')},
            },
        ),
        migrations.CreateModel(
            name='MultipleChoiceOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_letter', models.CharField(help_text='A, B, C, D', max_length=1)),
                ('option_text', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
                ('explanation', models.TextField(blank=True, help_text='Why this option is correct/incorrect')),
                ('order', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sub_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mc_options', to='users.subquestion')),
            ],
            options={
                'ordering': ['sub_question', 'order'],
                'unique_together': {('sub_question', 'option_letter')},
            },
        ),
        migrations.CreateModel(
            name='TrueFalseStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statement_number', models.PositiveIntegerField()),
                ('statement_text', models.TextField()),
                ('is_true', models.BooleanField()),
                ('explanation', models.TextField(blank=True, help_text='Explanation of why this is true/false')),
                ('marks', models.PositiveIntegerField(default=1)),
                ('order', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sub_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tf_statements', to='users.subquestion')),
            ],
            options={
                'ordering': ['sub_question', 'order'],
                'unique_together': {('sub_question', 'statement_number')},
            },
        ),
    ]
